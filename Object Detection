import jetson.inference
import jetson.utils
import time
import cv2
import numpy as np 

timeStamp=time.time()
fpsFilt=0
#net=jetson.inference.detectNet('ssd-mobilenet-v1',threshold=.5)
net=jetson.inference.detectNet('ssd-mobilenet-v2',threshold=.5)
#net=jetson.inference.detectNet('ssd-inception-v2',threshold=.5)
#net=jetson.inference.detectNet('coco-dog',threshold=.5)
#net=jetson.inference.detectNet('coco-bottle',threshold=.5)
#net=jetson.inference.detectNet('coco-chair',threshold=.5)
#net=jetson.inference.detectNet('coco-airplane',threshold=.5)
#net=jetson.inference.detectNet('pednet',threshold=.5)
#net=jetson.inference.detectNet('multiped',threshold=.5)
#net=jetson.inference.detectNet('facenet',threshold=.5)
dispW=1280
dispH=720
# dispW=640
# dispH=480
flip=2
font=cv2.FONT_HERSHEY_SIMPLEX

# Gstreamer code for improvded Raspberry Pi Camera Quality
# camSet='nvarguscamerasrc wbmode=3 tnr-mode=2 tnr-strength=1 ee-mode=2 ee-strength=1 ! video/x-raw(memory:NVMM), width=3264, height=2464, format=NV12, framerate=21/1 ! nvvidconv flip-method='+str(flip)+' ! video/x-raw, width='+str(dispW)+', height='+str(dispH)+', format=BGRx ! videoconvert ! video/x-raw, format=BGR ! videobalance contrast=1.5 brightness=-.2 saturation=1.2 ! appsink'
# cam=cv2.VideoCapture(camSet)
# cam=jetson.utils.gstCamera(dispW,dispH,'1')

cam=cv2.VideoCapture('/dev/video0')
cam.set(cv2.CAP_PROP_FRAME_WIDTH, dispW)
cam.set(cv2.CAP_PROP_FRAME_HEIGHT, dispH)

#cam=jetson.utils.gstCamera(dispW,dispH,'/dev/video0')
#display=jetson.utils.glDisplay()
#while display.IsOpen():
while True:
    #img, width, height=cam.CaptureRGBA()
    _,img = cam.read()
    height=img.shape[0]
    width=img.shape[1]

    frame=cv2.cvtColor(img,cv2.COLOR_BGR2RGBA).astype(np.float32)
    frame=jetson.utils.cudaFromNumpy(frame)
    

    detections=net.Detect(frame, width, height)
    for detect in detections:
        #print(detect)
        ID=detect.ClassID
        top=detect.Top
        left=detect.Left
        bottom=detect.Bottom
        right=detect.Right
        item=net.GetClassDesc(ID)
        print(item,top,left,bottom,right)
    #display.RenderOnce(img,width,height)
    dt=time.time()-timeStamp
    timeStamp=time.time()
    fps=1/dt
    fpsFilt=.9*fpsFilt + .1*fps
    #print(str(round(fps,1))+ ' fps')
    cv2.putText(img,str(round(fpsFilt,1))+' fps',(0,30),font,1,(0,0,255),2)
    cv2.imshow('detCam',img)
    cv2.moveWindow('detCam',0,0)
    if cv2.waitKey(1)==ord('q'):
        break
cam.release()
cv2.destroyAllWindows()
